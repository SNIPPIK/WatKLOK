import {ApplicationCommandOptionType} from "discord.js";
import {Constructor, Handler} from "@handler";
import {db} from "@lib/db";

class Group extends Constructor.Assign<Handler.Command> {
    public constructor() {
        super({
            name: "player-control",
            description: "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–ª–µ–µ—Ä–æ–º",
            permissions: ["Speak", "Connect"],
            options: [
                {
                    name: "replay",
                    description: "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫?",
                    type: ApplicationCommandOptionType.Subcommand
                },
                {
                    name: "seek",
                    description: "–ü—Ä–æ–ø—É—Å–∫ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ç–µ–∫—É—â–µ–º —Ç—Ä–µ–∫–µ!",
                    type: ApplicationCommandOptionType.Subcommand,
                    options: [
                        {
                            name: "value",
                            description: "–ü—Ä–∏–º–µ—Ä - 00:00",
                            required: true,
                            type: ApplicationCommandOptionType["String"]
                        }
                    ]

                },
                {
                    name: "pause",
                    description: "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞?!",
                    type: ApplicationCommandOptionType.Subcommand
                },
                {
                    name: "resume",
                    description: "–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞?!",
                    type: ApplicationCommandOptionType.Subcommand
                },
                {
                    name: "stop",
                    description: "–í—ã–∫–ª—é—á–µ–Ω–∏–µ –º—É–∑—ã–∫–∏",
                    type: ApplicationCommandOptionType.Subcommand
                }
            ],

            execute: ({message, args, sub}) => {
                const {author, member, guild} = message;
                const VoiceChannel = member?.voice?.channel;
                const queue = db.audio.queue.get(guild.id);

                //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
                if (!VoiceChannel) return {
                    content: `${author} | –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!`,
                    color: "Yellow"
                };

                //–ï—Å–ª–∏ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–º—É –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
                else if (queue && queue.voice && VoiceChannel?.id !== queue.voice.id && guild.members.me.voice.channel) return {
                    content: `${author} | –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!\n–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—É—Ç <#${queue.voice.id}>`,
                    color: "Yellow"
                };

                //–ï—Å–ª–∏ –Ω–µ—Ç –æ—á–µ—Ä–µ–¥–∏
                if (!queue) return { content: `${author} | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

                switch (sub) {
                    case "seek": {
                        //–ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Ç–æ–∫–æ–≤—ã–º
                        if (queue.songs.song.duration.seconds === 0) return { content: `${author} | –ê –∫–∞–∫? –≠—Ç–æ –∂–µ —Å—Ç—Ä–∏–º!`, color: "Yellow" };

                        //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–ª –≤—Ä–µ–º—è
                        else if (!args[0]) return { content: `${author} | –£–∫–∞–∂–∏ –≤—Ä–µ–º—è, –ø—Ä–∏–º–µ—Ä 00:00:00!`, color: "Yellow" };

                        const duration = args[0].duration();

                        //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫
                        if (isNaN(duration)) return { content: `${author} | –Ø –Ω–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!`, color: "Yellow" };

                        //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –≤—Ä–µ–º–µ–Ω–∏ –±–æ–ª—å—à–µ —á–µ–º –≤ —Ç—Ä–µ–∫–µ
                        else if (duration > queue.songs.song.duration.seconds) return { content: `${author} | –¢—ã —É–∫–∞–∑–∞–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!`, color: "Yellow" };

                        //–ï—Å–ª–∏ –º—É–∑—ã–∫—É –Ω–µ–ª—å–∑—è –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏–∑-–∑–∞ –ø–ª–µ–µ—Ä–∞
                        else if (!queue.player.playing) return { content: `${author} | –ú—É–∑—ã–∫–∞ –µ—â–µ –Ω–µ –∏–≥—Ä–∞–µ—Ç!`, color: "Yellow" };

                        //–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ —Å <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∞–π–º –∫–æ–¥–∞>
                        queue.player.play(queue.songs.song, duration);

                        //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–ø—É—Å–∫–µ –≤—Ä–µ–º–µ–Ω–∏
                        return { content: `‚è≠Ô∏è | Seeking to [${args[0]}] song\n> ${queue.songs.song.title}`, codeBlock: "css", color: "Green" };
                    }
                    case "replay": {
                        let { title } = queue.songs.song;

                        queue.player.play(queue.songs.song);
                        //–°–æ–æ–±—â–∞–µ–º –æ —Ç–æ–º —á—Ç–æ –º—É–∑—ã–∫–∞ –Ω–∞—á–∞—Ç–∞ —Å –Ω–∞—á–∞–ª–∞
                        return { content: `üîÇ | Replay | ${title}`, color: "Green", codeBlock: "css" };
                    }
                    case "pause": {
                        //–ï—Å–ª–∏ –º—É–∑—ã–∫–∞ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
                        if (queue.player.status === "player/pause") return { content: `${author} | –ú—É–∑—ã–∫–∞ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!`, color: "Yellow" };

                        //–ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Ç–æ–∫–æ–≤—ã–º
                        else if (queue.songs.song.duration.seconds === 0) return { content: `${author} | –≠—Ç–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ!`, color: "Yellow" };

                        //–ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –∏–≥—Ä–∞–µ—Ç
                        queue.player.pause();
                        return { content: `‚è∏ | Pause song | ${queue.songs.song.title}`, codeBlock: "css", color: "Green" };
                    }
                    case "resume": {
                        //–ï—Å–ª–∏ –º—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç
                        if (queue.player.status === "player/playing") return { content: `${author} | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

                        //–ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Ç–æ–∫–æ–≤—ã–º
                        else if (queue.songs.song.duration.seconds === 0) return { content: `${author} | –≠—Ç–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ!`, color: "Yellow" };

                        let { title } = queue.songs.song;

                        queue.player.resume();
                        return { content: `‚ñ∂Ô∏è | Resume song | ${title}`, codeBlock: "css", color: "Green" };
                    }

                    case "stop": {
                        if (queue.radio) {
                            //@ts-ignore
                            if (!member.permissions.has("MANAGE_SERVER") && env.get("player.radio.admin")) return { content: `${author} | –í –¥–∞–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —Ä–∞–¥–∏–æ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –ø—Ä–∞–≤–æ \`MANAGE_SERVER\`!`, color: "Yellow" };
                        }

                        db.audio.queue.remove(queue.guild.id);
                        return { content: `${author} | –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å —É–¥–∞–ª–µ–Ω–∞!` };
                    }
                }
            }
        })
    }
}

/**
 * @export default
 * @description –î–µ–ª–∞–µ–º –∫–ª–∞—Å—Å—ã –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏
 */
export default Object.values({Group});