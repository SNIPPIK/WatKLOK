import {ApplicationCommandOptionType} from "discord.js";
import {Constructor, Command} from "@handler";
import {db} from "@lib/db";

/**
 * @class Command_Pause
 * @command pause
 * @description –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞
 */
class Command_Pause extends Constructor.Assign<Command> {
    public constructor() {
        super({
            name: "pause",
            description: "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞?!",

            execute: (message) => {
                const { author, member, guild } = message;
                const queue = db.queue.get(guild.id);

                //–ï—Å–ª–∏ –Ω–µ—Ç –æ—á–µ—Ä–µ–¥–∏
                if (!queue) return { content: `${author}, ‚ö† | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

                //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
                else if (!member?.voice?.channel || !member?.voice) return { content: `${author}, –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!`, color: "Yellow" };

                //–ï—Å–ª–∏ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–º—É –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
                else if (queue && queue.voice && member?.voice?.channel?.id !== queue.voice.id && guild.members.me.voice.channel) return {
                    content: `${author}, –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!\n–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—É—Ç <#${queue.voice.id}>`,
                    color: "Yellow"
                };

                //–ï—Å–ª–∏ –º—É–∑—ã–∫–∞ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
                else if (queue.player.status === "player/pause") return { content: `${author}, ‚ö† | –ú—É–∑—ã–∫–∞ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!`, color: "Yellow" };

                //–ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Ç–æ–∫–æ–≤—ã–º
                else if (queue.songs.song.duration.seconds === 0) return { content: `${author}, ‚ö† | –≠—Ç–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ!`, color: "Yellow" };

                //–ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –∏–≥—Ä–∞–µ—Ç
                queue.player.pause();
                return { content: `‚è∏ | Pause song | ${queue.songs.song.title}`, codeBlock: "css", color: "Green" };
            }
        });
    };
}

/**
 * @class Command_Resume
 * @command resume
 * @description –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞
 */
class Command_Resume extends Constructor.Assign<Command> {
    public constructor() {
        super({
            name: "resume",
            description: "–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞?!",

            execute: (message) => {
                const { author, member, guild } = message;
                const queue = db.queue.get(guild.id);

                //–ï—Å–ª–∏ –Ω–µ—Ç –æ—á–µ—Ä–µ–¥–∏
                if (!queue) return { content: `${author}, ‚ö† | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

                //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
                else if (!member?.voice?.channel || !member?.voice) return { content: `${author}, –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!`, color: "Yellow" };

                //–ï—Å–ª–∏ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–º—É –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
                else if (queue && queue.voice && member?.voice?.channel?.id !== queue.voice.id && guild.members.me.voice.channel) return {
                    content: `${author}, –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!\n–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—É—Ç <#${queue.voice.id}>`,
                    color: "Yellow"
                };

                //–ï—Å–ª–∏ –º—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç
                else if (queue.player.status === "player/playing") return { content: `${author}, ‚ö† | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

                //–ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Ç–æ–∫–æ–≤—ã–º
                else if (queue.songs.song.duration.seconds === 0) return { content: `${author}, ‚ö† | –≠—Ç–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ!`, color: "Yellow" };

                let { title } = queue.songs.song;

                queue.player.resume();
                return { content: `‚ñ∂Ô∏è | Resume song | ${title}`, codeBlock: "css", color: "Green" };
            }
        });
    };
}

/**
 * @class Command_Stop
 * @command stop
 * @description –£–¥–∞–ª–µ–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏
 */
class Command_Stop extends Constructor.Assign<Command> {
    public constructor() {
        super({
            name: "stop",
            description: "–£–¥–∞–ª–µ–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏!",

            execute: (message) => {
                const { author, guild, member } = message;
                const queue = db.queue.get(guild.id);

                //–ï—Å–ª–∏ –Ω–µ—Ç –æ—á–µ—Ä–µ–¥–∏
                if (!queue) return { content: `${author}, ‚ö† | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

                //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
                else if (!member.voice?.channel || !member.voice) return { content: `${author}, –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!`, color: "Yellow" };

                //–ï—Å–ª–∏ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–º—É –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
                else if (queue.voice && member?.voice?.channel?.id !== queue.voice.id && guild.members.me.voice.channel) return {
                    content: `${author}, –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!\n–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—É—Ç <#${queue.voice.id}>`, color: "Yellow"
                };

                db.queue.remove(queue.guild.id);
                return { content: `${author}, –º—É–∑—ã–∫–∞–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å —É–¥–∞–ª–µ–Ω–∞!` };
            }
        });
    };
}

/**
 * @class Command_Repeat
 * @command repeat
 * @description –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–∞ –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–∞ –º—É–∑—ã–∫–∏
 *
 * @param type - –¢–∏–ø –ø–æ–≤—Ç–æ—Ä–∞
 */
class Command_Repeat extends Constructor.Assign<Command> {
    public constructor() {
        super({
            name: "repeat",
            description: "–í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–∞ –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–∞ –º—É–∑—ã–∫–∏!",

            options: [
                {
                    name: "type",
                    description: "–¢–∏–ø –ø–æ–≤—Ç–æ—Ä–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å!",
                    type: ApplicationCommandOptionType["String"],
                    choices: [
                        {
                            name: "song | –ü–æ–≤—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞",
                            value: "song"
                        },
                        {
                            name: "songs | –ü–æ–≤—Ç–æ—Ä –≤—Å–µ—Ö —Ç—Ä–µ–∫–æ–≤",
                            value: "songs"
                        },
                        {
                            name: "off | –í—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–∞",
                            value: "off"
                        }
                    ]
                }
            ],

            execute: (message, args) => {
                const { author, member, guild } = message;
                const queue = db.queue.get(guild.id);

                //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
                if (!member?.voice?.channel || !member?.voice) return { content: `${author}, –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!`, color: "Yellow" };

                //–ï—Å–ª–∏ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–º—É –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
                else if (queue && queue.voice && member?.voice?.channel?.id !== queue.voice.id && guild.members.me.voice.channel) return {
                    content: `${author}, –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!\n–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—É—Ç <#${queue.voice.id}>`, color: "Yellow"
                };

                //–ï—Å–ª–∏ –Ω–µ—Ç –æ—á–µ—Ä–µ–¥–∏
                else if (!queue) return { content: `${author}, ‚ö† | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

                const argument = args?.pop()?.toLowerCase();

                switch (argument) {
                    case "song": {
                        queue.repeat = "song";
                        return { content: `üîÇ | –ü–æ–≤—Ç–æ—Ä  | ${queue.songs[0].title}`, codeBlock: "css"};
                    }
                    case "songs": {
                        queue.repeat = "songs";
                        return { content: `üîÅ | –ü–æ–≤—Ç–æ—Ä –≤—Å–µ–π –º—É–∑—ã–∫–∏`, codeBlock: "css"};
                    }
                    case "off": {
                        queue.repeat = "off";
                        return { content: `‚ùå | –ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω`, codeBlock: "css"};
                    }
                }
            }
        });
    };
}

export default Object.values({Command_Pause, Command_Resume, Command_Stop, Command_Repeat});