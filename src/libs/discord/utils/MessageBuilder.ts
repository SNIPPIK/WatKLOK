import {ActionRowBuilder, Colors, ComponentData, EmbedData} from "discord.js";
import {Client} from "@lib/discord";
import {Logger} from "@env";

/**
 * @author SNIPPIK
 * @description —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–º–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 * @class MessageBuilder
 */
export class MessageBuilder {
    public callback: (message: Client.message, pages: string[], page: number, embed: MessageBuilder["embeds"]) => void;
    public promise: (msg: Client.message) => void;
    public components: (ComponentData | ActionRowBuilder)[] = [];
    public embeds: (EmbedData)[] = [];
    public page: number = 1;
    public time: number = 15e3;
    public pages: string[] = [];
    public replied: boolean = false;

    /**
     * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
     * @param interaction
     */
    public set send(interaction: Client.interact | Client.message) {
        this.prepareChannel(interaction).then((message) => {
            //–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
            if (this.time !== 0) MessageBuilder.delete = {message, time: this.time};

            //–ï—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
            if (!message) return;

            //–ï—Å–ª–∏ –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ
            if (this.promise) this.promise(message);

            //–ï—Å–ª–∏ –º–µ–Ω—é, —Ç–æ –Ω–µ –Ω–∞–¥–æ —É–¥–∞–ª—è—Ç—å
            if (this.pages && this.pages.length > 1) this.createMenuTable(message);
        }).catch((err) => Logger.log("ERROR", `${err}`));
    };

    /**
     * @description –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param interaction
     */
    private prepareChannel = (interaction: Client.interact | Client.message) => {
        try {
            if ("replied" in interaction && !(interaction as any).replied && !this.replied) {
                if (interaction.isRepliable()) return interaction.reply({...this as any, fetchReply: true});
                return interaction.followUp({...this as any, fetchReply: true});
            }
        } catch { /*–ó–Ω–∞—á–∏—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ*/ }

        return interaction.channel.send({...this as any, fetchReply: true}) as Promise<Client.message>;
    };

    /**
     * @description –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
     * @param msg - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return void
     */
    private createMenuTable = (msg: Client.message) => {
        const pages = this.pages;
        let page = this.page;

        msg.createMessageComponentCollector({
            time: 60e3, componentType: 2,
            filter: (click) => click.user.id !== msg.client.user.id
        })
            .on("collect", (i) => {
                //–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
                try { i.deferReply(); i.deleteReply(); } catch {}

                //–ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
                if (i.customId === "cancel") {
                    MessageBuilder.delete = {time: 200, message: msg};
                    return;
                }
                //–ï—Å–ª–∏ –Ω–µ–ª—å–∑—è –ø–æ–º–µ–Ω—è—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                else if (page === pages.length || page < 1) return;

                //–ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                if (i.customId === "back") page--;
                //–ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                else if (i.customId === "next") page++;

                return this.callback(msg, pages, page, this.embeds);
            });
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º embeds –≤ –±–∞–∑—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
     * @param data - MessageBuilder["configuration"]["embeds"]
     */
    public addEmbeds = (data: MessageBuilder["embeds"]) => {
        Object.assign(this.embeds, data);

        for (let embed of this.embeds) {
            //–î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é
            if (!embed.color) embed.color = 258044;

            //–ò—Å–ø—Ä–∞–≤–ª—è–µ–º fields, –Ω—É –º–∞–ª–æ –ª–∏
            if (embed.fields?.length > 0) {
                for (const field of embed.fields) {
                    if (field === null) embed.fields = embed.fields.toSpliced(embed.fields.indexOf(field), 1);
                }
            }
        }

        return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param time - –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    public setTime = (time: number) => {
      this.time = time;
      return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º —Åomponents –≤ –±–∞–∑—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
     * @param data - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
     */
    public addComponents = (data: MessageBuilder["components"]) => {
        Object.assign(this.components, data);
        return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º pages –≤ –±–∞–∑—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
     * @param list - –°–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    public setPages = (list: string[]) => {
        this.pages = list;

        //–î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        if (this.pages && this.pages.length > 1) this.components = [{
            type: 1, components: [
                {type: 2, emoji: {name: "‚¨Ö"}, custom_id: "back", style: 2},
                {type: 2, emoji: {name: "‚û°"}, custom_id: "next", style: 2},
                {type: 2, emoji: {name: "üóëÔ∏è"}, custom_id: "cancel", style: 4}
            ]
        }] as any;

        return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
     * @param func - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ
     */
    public setPromise = (func: MessageBuilder["promise"]) => {
        this.promise = func;
        return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏, –¥–ª—è menu
     * @param func - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ
     */
    public setCallback = (func: MessageBuilder["callback"]) => {
        this.callback = func;
        return this;
    };

    /**
     * @description –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏, –¥–ª—è menu
     * @param value - –ë—ã–ª –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
     * @default false
     */
    public setReplied = (value: boolean) => {
        this.replied = value;
        return this;
    };

    /**
     * @description –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
     * @param options - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    public static set delete(options: { message: Client.message | Client.interact, time?: number }) {
        const {message, time} = options;

        //–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        setTimeout(() => {
            if ("deletable" in message && message.deletable) {
                message.delete().catch((err) => Logger.log("WARN", err));
            } else if ("replied" in message && !(message as any).replied) {
                (message)?.deleteReply().catch((err) => Logger.log("WARN", err))
            }
        }, time ?? 15e3);
    };
}

/**
 * @author SNIPPIK
 * @description –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @class LightMessageBuilder
 */
export class LightMessageBuilder {
    private options: {
        color?: "DarkRed" | "Blue" | "Green" | "Default" | "Yellow" | "Grey" | "Navy" | "Gold" | "Orange" | "Purple" | number,
        codeBlock?: string,
        content: string,
        time?: number,
        replied?: boolean
    } = {
        color: null,
        codeBlock: null,
        content: null,
        replied: null
    };

    public constructor(options: LightMessageBuilder["options"]) {
        Object.assign(this.options, options);
    };

    /**
     * @description –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫–ª–∞—Å—Å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—É–¥–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
     * @param interaction
     */
    public set send(interaction: Client.interact | Client.message) {
        let text = "";

        if (this.options.codeBlock) {
            if (this.options.color === "DarkRed") text = `‚õîÔ∏è **Error**\n`;
            else if (this.options.color === "Yellow") text = `‚ö†Ô∏è **Warning**\n`;
        } else {
            if (this.options.color === "DarkRed") text = `‚õîÔ∏è **Error** | `;
            else if (this.options.color === "Yellow") text = `‚ö†Ô∏è **Warning** | `;
        }

        new MessageBuilder().addEmbeds([
            {
                color: this.parseColor,
                description: text + (this.options.codeBlock ? `\`\`\`${this.options.codeBlock}\n${this.options.content}\n\`\`\`` : this.options.content)
            }
        ]).setReplied(this.options.replied).send = interaction;
    };

    /**
     * @description –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —á–∏—Å–ª–æ
     * @private
     */
    private get parseColor() {
        if (!this.options.color) return 258044;
        else if (typeof this.options.color === "number") return this.options.color;
        return Colors[this.options.color] ?? 258044;
    };
}
