import { Command, ResolveData } from "@Client/Command";
import { Queue } from "@AudioPlayer/Queue/Queue";
import { ClientMessage } from "@Client/Message";

export default class extends Command {
    public constructor() {
        super({
            name: 'random',
            aliases: ["rm"],
            description: '–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø—Ä–æ–∏–≥—Ä–∞–Ω–Ω–æ–π –º—É–∑—ã–∫–∏ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω–∞ —Å–ª—É—á–∞–π–Ω–∞—è –º—É–∑—ã–∫–∞!'
        })
    };

    public readonly run = (message: ClientMessage): ResolveData => {
        const { author, member, guild, client } = message;
        const queue: Queue = client.player.queue.get(guild.id);

        //–ï—Å–ª–∏ –Ω–µ—Ç –æ—á–µ—Ä–µ–¥–∏
        if (!queue) return { text: `${author}, ‚ö† | –ú—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.`, color: "Yellow" };

        //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
        if (!member?.voice?.channel || !member?.voice) return { text: `${author}, –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!`, color: "Yellow" };

        //–ï—Å–ª–∏ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–º—É –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
        if (queue && queue.voice && member?.voice?.channel?.id !== queue.voice.id && guild.members.me.voice.channel) return {
            text: `${author}, –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!\n–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—É—Ç <#${queue.voice.id}>`,
            color: "Yellow"
        };

        //–ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —Ä–∞–¥–∏–æ
        if (queue.options.radioMode) return { text: `${author}, –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–∑-–∑–∞ –≤–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–¥–∏–æ!`, color: "Yellow" };

        //–ï—Å–ª–∏ –≤—Å–µ–≥–æ 2 –∏ –º–µ–Ω–µ–µ —Ç—Ä–µ–∫–æ–≤
        if (queue.songs.length <= 2) return { text: `${author}, –í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ ${queue.songs.length}, –Ω–µ—Ç —Å–º—ã—Å–ª–∞!`, color: "Yellow" };

        if (queue.options.random === false) {
            queue.options.random = true;
            return { text: `üîÄ | Auto shuffle enable`, codeBlock: "css" };
        } else {
            queue.options.random = false
            return { text: `üîÄ | Auto shuffle disable`, codeBlock: "css" };
        }
    };
}