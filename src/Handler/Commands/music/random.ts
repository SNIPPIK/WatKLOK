import {Command, ResolveData} from "../../../Structures/Handle/Command";
import {Queue} from "../../../AudioPlayer/Structures/Queue/Queue";
import {ClientMessage} from "../../Events/Activity/interactionCreate";

export default class Random extends Command {
    public constructor() {
        super({
            name: 'random',
            aliases: ["rm"],
            description: '–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø—Ä–æ–∏–≥—Ä–∞–Ω–Ω–æ–π –º—É–∑—ã–∫–∏ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω–∞ —Å–ª—É—á–∞–π–Ω–∞—è –º—É–∑—ã–∫–∞!',

            isEnable: true,
            isSlash: true
        })
    };

    public readonly run = async (message: ClientMessage): Promise<ResolveData> => {
        const queue: Queue = message.client.queue.get(message.guild.id);

        //–ï—Å–ª–∏ –Ω–µ—Ç –æ—á–µ—Ä–µ–¥–∏
        if (!queue) return { text: `${message.author}, ‚ö† | –ú—É–∑—ã–∫–∞ —â–∞—Å –Ω–µ –∏–≥—Ä–∞–µ—Ç.`, color: "DarkRed" };

        //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º
        if (!message.member?.voice?.channel || !message.member?.voice) return { text: `${message.author}, –ü–æ–¥–∫–ª—é—á–∏—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!`, color: "DarkRed" };

        //–ï—Å–ª–∏ –µ—Å—Ç—å –æ—á–µ—Ä–µ–¥—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–æ–º—É –∂–µ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
        if (queue && queue.voice && message.member?.voice?.channel?.id !== queue.voice.id) return {
            text: `${message.author}, –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç –≤ –¥—Ä—É–≥–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!\n–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ —Ç—É—Ç <#${queue.voice.id}>`,
            color: "DarkRed"
        };

        //–ï—Å–ª–∏ –≤—Å–µ–≥–æ 2 –∏ –º–µ–Ω–µ–µ —Ç—Ä–µ–∫–æ–≤
        if (queue.songs.length <= 2) return { text: `${message.author}, –í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ ${queue.songs.length}, –Ω–µ—Ç —Å–º—ã—Å–ª–∞!`, color: "DarkRed" };

        if (queue.options.random === false) {
            queue.options.random = true;
            return {text: `üîÄ | Auto shuffle enable`, codeBlock: "css"};
        } else {
            queue.options.random = false
            return {text: `üîÄ | Auto shuffle disable`, codeBlock: "css"};
        }
    };
}