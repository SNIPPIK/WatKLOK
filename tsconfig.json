{
  "compilerOptions": {
    "paths": {
      "@Client": ["Source/Client/Shard"],
      "@Client/DB": ["Source/db"],
      "@Client/Fs": ["Source/FileSystem"],
      "@Client/Shard": ["Source/Client/ShardManager"],
      "@Client/Action": ["Data/Structures/Abstracts/Action"],
      "@Client/Command": ["Data/Structures/Abstracts/Command"],
      "@Client/Message": ["Data/Actions/Activity/interactionCreate"],
      "@Client/Cycles": ["Cycles/index"],

      "@AudioPlayer": ["Components/AudioPlayer/index"],
      "@AudioPlayer/*": ["Components/AudioPlayer/*"],

      "@Request": ["Components/Request/index"],

      "@Utils/*": ["Source/Utils/*"],
      "@Json/*": ["Data/Json/*"],
      "@APIs": ["Components/APIs/index"],
      "@Emitter": ["Data/Structures/Emitter/index"]
    },
    "baseUrl": "./src",
    // Основные настройки.
    "module": "CommonJS",
    "moduleResolution": "Node",
    "outDir": ".AutoBuild",
    "alwaysStrict": true,
    "sourceMap": false,
    "target": "ES2022",

    // Дополнительные настройки.
    "declaration": false,                // Создать ли ".d.ts" файлы
    "esModuleInterop": true,             // Создать хелперы __importStar и __importDefault для обеспечения совместимости с экосистемой Babel и включить allowSyntheticDefaultImports для совместимости с системой типов.
    "listFiles": false,                  // Печатать ли имена файлов при компиляции?
    "listEmittedFiles": true,            // Печатать список всех выходных файлов при компиляции. Требуется TypeScript версии 2.0 или новее.
    "skipLibCheck": true,                // Не проверять типы, заданные во всех файлах описания типов (*.d.ts)?
    "traceResolution": false,            // Выводить в логи сообщения о нахождении путей до модулей.
    "resolveJsonModule": true,           // Не проверять Json файлы
    "removeComments": true,              // Удалить все комментарии из итогового файла.
    "noEmitHelpers": false,              // Отключить создание пользовательских вспомогательных функций, таких как `__extends` в скомпилированном выводе

    // Вспомогательные настройки.
    "noFallthroughCasesInSwitch": true,  // Сообщить об ошибке в случае обнаружения проваливания в конструкции switch-case?
    "noImplicitReturns": false,          // Сообщить об ошибке, когда не все пути кода в функции возвращают значение?
    "strictNullChecks": false,           // Значения "null" и "undefined" могут быть присвоены только значениям данного типа
    "allowUnreachableCode": true,        // Сообщить об ошибке в случае обнаружения кода, который никогда не будет выполнен?
    "noImplicitThis": true,              // Показывать ошибку на "this", если где-то задан тип "any".
    "importHelpers": false,              // Имортировать созданные хелперы (__extends, __rest и так далее) из "tslib".
    "noImplicitAny": true                // Запрет на использование any
  },
  "include": [
    "src", "Data",
    "package.json", "tsconfig.json"
  ],
  "exclude": ["node_modules"]
}